<div id="new-item-fields" class="modal fade" data-backdrop="static">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
  </div>
  <div class="modal-body">
    <div class="box-content">
      <fieldset>
        <div class="control-group">
          <%= f.label :code, :class => "control-label" %>
          <div class="controls">
            <%= f.grouped_collection_select :item_id, @categories, :items, :name, :id, :name, {:prompt => 'Pilih Item'}, :class => "item field", :data => { :validation => "required", "validation-error-msg" => "Item harus diisi", :rel=>"chosen" } if @categories %> 
          </div>
          <%= f.hidden_field :item_id, :class => "item_id input field", :required => true, :readonly => true %>
        </div>
        <div class="control-group">
          <%= f.label "Category", :class => "control-label" %>
          <div class="controls">
            <%= text_field_tag :category_name, nil, :class => "category_name input", :required => true, :readonly => true %>
          </div>
        </div>
        <div class="control-group">
          <%= f.label :price, "Harga", :class => "control-label" %>
          <div class="controls">
            <%= f.text_field :price, :class => "purchase_price input field", :required => true, :data => { :validation => "required", "validation-error-msg" => "harga harus diisi" } %>
            <%= hidden_field_tag :item_stock, nil, :class => "input item_stock", :required => true, :readonly => true, :data => { :validation => "required", "validation-error-msg" => "harga harus diisi" } %>
          </div>
        </div>
        <div class="control-group">
          <%= f.label :price, "Harga(Rp)", :class => "control-label" %>
          <div class="controls">
            <%= text_field_tag :valas_price, nil, :class => "input field valas_price", :required => true, :readonly => true, :data => { :validation => "required", "validation-error-msg" => "harga harus diisi" } %>
          </div>
        </div>
        <div class="control-group">
          <%= f.label :qty, :class => "control-label" %>
          <div class="controls">
            <%= f.text_field :qty, :class => "input field number qty_so ", :required => true, :readonly => true, :data => { :validation => "required", "validation-error-msg" => "qty harus diisi" }, :onkeypress=>"return numbersonly(event)", :onkeyup => "totalTransaction(this)" %> 
          </div>
        </div>
        <div class="control-group">
          <%= f.label :subtotal, :class => "control-label" %>
          <div class="controls">
            <%= f.text_field :subtotal, :class => "subtotal input field", :required => true, :readonly => true, :data => { :validation => "required", "validation-error-msg" => "qty harus diisi" } %> 
          </div>
        </div>
      </fieldset>
      <%= f.hidden_field(:_destroy, :class => "field") %>
    </div>
  </div>
  <div class="modal-footer">
    <button id="addButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true">Add</button>
    <button id="cancelButton" type="button" class="btn btn-inverse" data-dismiss="modal" aria-hidden="true">Cancel</button>
  </div>
  <script type="text/javascript">
    itemFieldsUI.init();
  </script>
</div>

<script type="text/javascript">
  $(".number").keyup(function(event) {
    if ( $.inArray(event.keyCode,[46,8,9,27,13,190]) !== -1 ||
      (event.keyCode == 65 && event.ctrlKey === true) || 
      (event.keyCode >= 35 && event.keyCode <= 39)) {
      return;
    }
    else {
      if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
        event.preventDefault(); 
      }   
    }
  });

  $('.purchase_price').keyup(function(event){
    var qty = $('.qty_so').val();
    var price = this.value;
    var values = price * qty;
    var kurs = $('#sales_invoice_kurs').val();
    $('.valas_price').val(parseFloat(kurs*price));
    $('.subtotal').val(parseFloat(values));
  });

  $('.qty_so').keyup(function(event){
    var price = $('.purchase_price').val();
    var qty = this.value;
    var values = price * qty;
    var kurs = $('#sales_invoice_kurs').val();
    $('.valas_price').val(parseFloat(kurs*price));
    $('.subtotal').val(parseFloat(values));
  });

  $("select.item").change(function() {
    var item_text = $(".item_name");
    var category_text = $(".category_name");
    var price_text = $(".purchase_price");
    
    var xx; 
    $('tr.fields').each(function(index, value){
      if(($(this).find('td select').val() == $('select.field').val())||($(this).find('td input.supplier_item').val() == $('select.field').val())){ xx = true; }else{ xx = false; }
    });

    if($(this).val()) {
      $.ajax({
        url: '/sales_invoices/items_info',
        type: 'GET',
        async: false,
        dataType: 'json',
        data: {
          item_id: $(this).val()
        },
        success: function(data) {
          if(xx){
            $('#addButton').attr("disabled","disabled");
          }else{
            $('#addButton').attr("disabled",false);
          }
          $(".item_name").val(data.item_name);
          $(".category_name").val(data.category_name);
          $(".item_id").val(data.item_id);
          $(".purchase_price").val(data.item_price);
          $(".number").attr("readonly", false);
          $(".number").val(1);
          $('.item_stock').val(data.item_stock);
          $('.valas_price').val(data.valas_price);
          $(".subtotal").val(parseFloat($('.number').val()*$(".purchase_price").val()));
          // subtotal_value();
        },
        error: function(data){},
      });
    } else {
      $(".item_name").val("");
      $(".category_name").val("");
      $(".number").val(0);
      $(".subtotal").val(0);
    }
  });

  $('tr.fields').each(function(index,value){
    $($(this).find('input')[1]).keyup(function() {
      var value = $(this).val() * $($(this).parents("tr").find('input')[0]).val();
      $($(this).parents("tr").find('input')[4]).val(value);
      calculateTotal();
      return false;
    });
  });

  $('tr.fields').find('a').each(function(index,value){
    $(this).click(function(){
      $(this).parents('tr').remove();
      calculateTotal()-parseFloat($($(this).find('input')[4]).val());
      return false;
    });
  });

  function calculateTotal() {
    var subTotal = 0;
    $('tr.fields').each(function(index,value){
      subTotal += parseFloat($($(this).find('input')[4]).val());
      $("#sales_invoice_total").val(subTotal); 
      $("#sales_invoice_ppn").val(subTotal * 0.1); 
      $("#sales_invoice_grand_total").val(subTotal * 1.1); 
    });
  }

  $('#addButton').click(function(){
    $('#items-table tr.fields').each(function(index,value){
      $($(this).find('td')[1]).hide();
    });
  });

</script>